package main

import (
	"reflect"
	"strconv"
	"testing"
)

func Test_numIslands(t *testing.T) {
	var tests = []struct {
		in  [][]byte
		out int
	}{
		{
			in: [][]byte{
				[]byte{0x31, 0x31, 0x31, 0x31, 0x30},
				[]byte{0x31, 0x31, 0x30, 0x31, 0x30},
				[]byte{0x31, 0x31, 0x30, 0x30, 0x30},
				[]byte{0x30, 0x30, 0x30, 0x30, 0x30},
			},
			out: 1,
		},
		{
			in: [][]byte{
				[]byte{0x31, 0x31, 0x30, 0x30, 0x30},
				[]byte{0x31, 0x31, 0x30, 0x30, 0x30},
				[]byte{0x30, 0x30, 0x31, 0x30, 0x30},
				[]byte{0x30, 0x30, 0x30, 0x31, 0x31},
			},
			out: 3,
		},
	}
	for i, tt := range tests {
		t.Run(strconv.Itoa(i+1), func(t *testing.T) {
			res := numIslands(tt.in)
			if !reflect.DeepEqual(res, tt.out) {
				t.Errorf("got %+v, want %+v", res, tt.out)
			}
		})
	}
}
